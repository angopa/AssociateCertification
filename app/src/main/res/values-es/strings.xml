<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="main_toolbar_title">Certificacion Android</string>

    <!-- Tab Titles -->
    <string name="tab_title_android_core">Core</string>
    <string name="tab_title_user_interface">UI</string>
    <string name="tab_title_data_management">Data</string>
    <string name="tab_title_debugging">Debugging</string>
    <string name="tab_title_testing">Testing</string>

    <!-- Generic  -->
    <string name="label_header_codelabs">Ejemplos</string>
    <string name="generic_label_undo">UNDO</string>
    <string name="generic_label_reset">RESET</string>
    <string name="generic_label_delete">DELETE</string>
    <string name="generic_label_save">SAVE</string>
    <string name="generic_do_something_message">Do something</string>
    <string name="activity_restarted_message">Activity Reiniciada</string>
    <string name="dialog_label_ok">Ok</string>
    <string name="dialog_label_cancel">Cancel</string>
    <string name="label_test_button">Test Button</string>
    <string name="label_return">Return</string>

    <!-- Android Core Tab -->
    <string name="android_core_header_label">Basico</string>
    <string name="android_ui_header_label">Interfaz de Usuario</string>
    <string name="android_data_header_label">Manejo de Datos</string>
    <string name="android_debugging_header_label">Depuracion</string>
    <string name="android_test_header_label">Pruebas</string>

    <!-- Toast Activity -->
    <string name="label_toast_screen_title">Ejemplo Mensaje Toast</string>
    <string name="label_button_normal_toast_message">Simple Mensage</string>
    <string name="label_button_positioning_toast_message">Toast en Diferente Posicion</string>
    <string name="label_button_custom_toast_message">Toast Personalizado</string>
    <string name="label_toast_message">Toast Message</string>
    <string name="toast_simple_message">Simple mensaje Toast</string>
    <string name="toast_over_here_message">Hey por aqui!</string>
    <string name="toast_custom_message">Este es un mensage personalizado</string>

    <!-- SnackBar Activity -->
    <string name="label_snack_bar">Snackbar</string>
    <string name="label_snack_bar_screen_title">Ejemplo Snackbar</string>
    <string name="label_button_normal_snack_bar">Normal Snackbar</string>
    <string name="label_button_action_call_snack_bar">Snackbar con Accion</string>
    <string name="label_button_custom_view_snack_bar">Snackbar personalizado</string>
    <string name="snack_bar_simple_message">Nomal Snackbar Mensage</string>
    <string name="snack_bar_delete_dummy">Item Eliminado</string>
    <string name="snack_bar_restore_dummy">Item Restaurado</string>
    <string name="snack_bar_custom_message">Snackbar Personalizado</string>

    <!-- Location Activity -->
    <string name="localization_screen_title">Ejemplo Localizacion</string>
    <string name="label_locale_language" translation_description="">Idioma establecido en: %s</string>
    <string name="label_localization_card">Localize tu applicacion</string>
    <string name="label_locale_date">Fecha: %s</string>
    <string name="label_language_english_button">Idioma Ingles</string>
    <string name="label_language_spanish_button">Idioma Espanol</string>

    <!-- Activity -->
    <string name="label_activity_codelab">Ejemplo Activity</string>
    <string name="label_activity_card">Componente Activity</string>
    <string name="label_button_start_activity_contact">Lanzar Activity - Seleccionar Contacto</string>
    <string name="label_button_start_activity_image">Lanzar Activity - Seleccionar Imagen</string>
    <string name="label_launch_calendar_button">Launch Calendar</string>
    <string name="label_save_preferences">Save preferences</string>
    <string name="intent_filter_screen_label">Intent Filter Example</string>
    <string name="label_intent_filter_text_view">Intent Filte name: SEND, category: DEFAULT, data: */*</string>
    <string name="label_send_email_with_explicit_activity">Send With Gmail</string>
    <string name="label_send_email_implicit_activity">Send Email</string>
    <string name="label_custom_activity_for_result">Open Option List</string>
    <string name="dialog_label_selected_date">Selected Date</string>

    <!-- Option List Activity   -->
    <string name="label_option_4">Option 4</string>
    <string name="label_option_3">Option 3</string>
    <string name="label_option_2">Option 2</string>
    <string name="label_option_1">Option 1</string>
    <string name="label_cancel_button">Cancel</string>
    <string name="label_select_button">Select</string>
    <string name="label_test_intent">Test Intent</string>

    <!-- Service Activity -->
    <string name="label_service_card">Services</string>
    <string name="service_screen_title">Services</string>
    <string name="service_description">This is a example description for the ExampleService</string>
    <string name="intent_service_description">This is a example description for the ExampleIntentService</string>
    <string name="foreground_service_description">This is a example description for the ForegroundService</string>
    <string name="bound_service_description">This is a example description for the BoundService</string>
    <string name="messenger_bound_service_description">This is a example description for the Bound Service - Messenger implementation</string>
    <string name="label_button_launch_simple_service">Simple Service</string>
    <string name="label_button_launch_simple_intent_service">Simple Intent Service</string>
    <string name="label_button_launch_foreground_service">Foreground Service</string>
    <string name="label_button_launch_bound_service">Bound Service</string>
    <string name="label_button_obtain_random_number">Obtain Random Number: %s</string>
    <string name="notification_ticker">Ticker text</string>
    <string name="downloading_notification_title">Foreground Notification</string>
    <string name="downloading_notification_description">Fake downloading&#8230; last for 15 seconds</string>
    <string name="download_complete_notification_title">Download Complete</string>
    <string name="download_complete_notification_description">Open Activity to check your downloaded file.</string>
    <string name="label_messenger_bound_service">Messenger Bound Implementation</string>
    <string name="label_bound_service">Bound Service</string>
    <string name="label_extend_binder">Extending the Binder class</string>
    <string name="label_messenger_hello_button">Say Hello Service!</string>

    <!-- Threads -->
    <string name="label_thread_card">Threads</string>
    <string name="thread_screen_title">Threads</string>
    <string name="header_simple_runnable">This is a simple Runnable</string>
    <string name="header_recurrent_runnable">This is a recurrent Runnable</string>
    <string name="body_simple_runnable">Simple Example of Runnable Class.</string>
    <string name="body_recurrent_runnable">Simple Example of Runnable Class. Runnable changes the index every second only when the screen is in foreground. Runnable is working in the main UI thread.</string>
    <string name="label_threads_running">Running&#8230;</string>
    <string name="label_thread_hello_message">Hello From Runnable</string>
    <string name="label_thread_recursive_example">Recursive Runnable Class</string>
    <string name="label_thread_launch_runnable">Launch Runnable</string>
    <string name="label_thread_simple_runnable">Simple Runnable Class</string>
    <string name="label_thread_pool_example">Thread Pool Class</string>
    <string name="label_thread_fixed_thread_pool">Fixed Thread Pool</string>
    <string name="label_thread_fixed_pool_description">Creates a thread pool that reuses a fixed number of threads to execute any number of tasks. If additional tasks are submitted when all threads are active, they will wait in the queue until a thread is available. It is best fit for most off the real-life usecases. Check Log to see behavior.</string>
    <string name="label_thread_custom_executor">Custom Thread Pool Executor</string>
    <string name="label_thread_custom_pool_description">We create a custom Thread Pool, using LinkedBlockingDeque, Check the Log to see behavior and Check the code to see how it was implemented.</string>
    <string name="label_thread_pool_executor">Thread Pool Executor</string>
    <string name="label_thread_schedule_pool_button">Schedule Thread Pool</string>
    <string name="label_hread_fixed_pool_button">Fixed Thread Pool</string>
    <string name="label_thread_custom_pool">Custom Thread Pool</string>
    <string name="label_thread_schedule_pool_title">Schedule Thread Pool</string>
    <string name="label_thread_schedule_pool_description">Creates a thread pool that can schedule commands to run after a given delay, or to execute periodically. Check Log to validate behavior.</string>
    <string name="label_thread_progress_bar_example">Progress Bar Example</string>
    <string name="label_thread_counter">Count: %s</string>
    <string name="label_thread_async_task">Async Task Class</string>
    <string name="label_progress">Progress: %s / %s</string>
    <string name="label_thread_async_task_title">Async Task</string>
    <string name="label_thread_async_task_description">Simple Async Task example simulating downloading files, will display some fake progress and alert the user when all the fake files were downloaded.</string>
    <string name="label_thread_launch_async_task">Launch Async Task</string>
    <string name="label_thread_loader_class">Loader Class</string>
    <string name="label_thread_job_scheduler">Job Scheduler Class</string>
    <string name="label_thread_network_type_required">Network Type Required</string>
    <string name="label_thread_none">None</string>
    <string name="label_thread_any">Any</string>
    <string name="label_thread_wifi">Wifi</string>
    <string name="label_thread_schedule_job_button">Schedule Job</string>
    <string name="label_thread_cancel_job_button">Cancel Job</string>
    <string name="notification_title_job_scheduler">Job Scheduler</string>
    <string name="notification_body_job_scheduler">Job Scheduler reach the conditions to run the job.</string>
    <string name="toast_message_job_schdeuler_started">Job Scheduled, job will run when the constraints are met.</string>
    <string name="toast_message_job_scheduler_cancelled">Jobs Cancelled</string>
    <string name="label_thread_requires">Requires:</string>
    <string name="label_device_idle_switch">Device Idle</string>
    <string name="label_device_charging_switch">Device Charging</string>
    <string name="label_thread_job_scheduler_title">Job Scheduler</string>
    <string name="label_thread_job_scheduler_description">JobScheduler has the advantage of conserving battery by optimally scheduling jobs to reduce power consumption, and by working with the Doze API.</string>
    <string name="label_thread_override_deadline">Override Deadline:</string>
    <string name="label_thread_no_set">No set</string>

</resources>